<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[React初试]]></title>
      <url>%2F2017%2F02%2F11%2FReact%E5%88%9D%E8%AF%95%2F</url>
      <content type="text"><![CDATA[前几天学习了React.js(我其实连jQuery还没有学好)，我就先随便写点，目前就会用React写出Hello，World！（大大的尴尬） ####1.1 CDN引用React需要引入三个库:react.min.js - React 的核心库react-dom.min.js - 提供与 DOM 相关的功能browser.min.js - 用于将 JSX 语法转为 JavaScript 语法 两个React库12&lt;script src="//cdn.bootcss.com/react/15.4.2/react.js"&gt;&lt;/script&gt;&lt;script src="//cdn.bootcss.com/react/15.4.2/react-dom.js"&gt;&lt;/script&gt; 和一个jsx语法解析库1&lt;script src="//cdn.bootcss.com/babel-core/6.1.19/browser.min.js"&gt;&lt;/script&gt; ####1.2 Heool,world!script部分代码，必须在script后面加上 type=”text/babel”下面是React版的Hello，World!1234ReactDOM.render( &lt;h1&gt;Hello, world!&lt;/h1&gt;, document.getElementById('example') ); Html代码：1&lt;div id="example"&gt;&lt;/div&gt; ###以下内容摘抄自菜鸟教程，纯属凑字，我按照教程实验并没有起到任何作用，不知道哪里写的不对，希望有会得同学教一教我！ ####1.3 通过NPM安装React第一步、安装全局包123$ npm install babel -g$ npm install webpack -g$ npm install webpack-dev-server --save-dev | npm install webpack -g 第二步、创建根目录创建一个根目录，目录名为：reactApp，再使用 npm init 初始化，生成 package.json 文件：1234567891011121314151617181920212223242526272829$ mkdir reactApp$ cd reactApp/$ npm initname: (react) zhengzhiyuuversion: (1.0.0)description: 测试entry point: (index.js)test command:git repository:keywords:author:license: (ISC)About to write to D:\react\package.json:&#123; "name": "zhengzhiyuu", "version": "1.0.0", "description": "测试", "main": "index.js", "scripts": &#123; "test": "echo \"Error: no test specified\" &amp;&amp; exit 1" &#125;, "author": "", "license": "ISC"&#125;Is this ok? (yes) 第三步、添加依赖包及插件因为要使用 React, 所以需要先安装它，–save 命令用于将包添加至 package.json 文件。12$ npm install react --save$ npm install react-dom --save 同时我们也要安装一些 babel 插件1234$ npm install babel-core$ npm install babel-loader$ npm install babel-preset-react$ npm install babel-preset-es2015 第四步、创建文件1234$ touch index.html$ touch App.jsx$ touch main.js$ touch webpack.config.js 第五步、设置编译器，服务器，载入器打开 webpack.config.js 文件添加以下代码:12345678910111213141516171819202122232425262728 var config = &#123; entry: './main.js', output: &#123; path:'./', filename: 'index.js', &#125;, devServer: &#123; inline: true, port: 7777 &#125;, module: &#123; loaders: [ &#123; test: /\.jsx?$/, exclude: /node_modules/, loader: 'babel', query: &#123; presets: ['es2015', 'react'] &#125; &#125;] &#125; &#125;module.exports = config; entry: 指定打包的入口文件 main.js。 output：配置打包结果，path定义了输出的文件夹，filename则定义了打包结果文件的名称。 devServer：设置服务器端口号为 7777，端口后你可以自己设定 。module：定义了对模块的处理逻辑，这里可以用loaders定义了一系列的加载器，以及一些正则。当需要加载的文件匹配test的正则时，就会调用后面的loader对文件进行处理，这正是webpack强大的原因。 现在打开 package.json 文件，找到 “scripts” 中的 “test” , “echo \”Error: no test specified\” &amp;&amp; exit 1” 使用以下代码替换：1"start": "webpack-dev-server --hot" 现在我们可以使用 npm start 命令来启动服务。–hot 命令会在文件变化后重新载入，这样我们就不需要在代码修改后重新刷新浏览器就能看到变化。 第六步、index.html设置 div id = “app” 为我们应用的根元素，并引入 index.js 脚本文件。1234567891011121314&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset = "UTF-8"&gt; &lt;title&gt;React App&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id = "app"&gt;&lt;/div&gt; &lt;script src = "index.js"&gt;&lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 第七步、App.jsx 和 main.js这是第一个 react 组件这个组件将输出 Hello World!。App.jsx 文件代码:12345678910111213import React from 'react';class App extends React.Component &#123; render() &#123; return ( &lt;div&gt; Hello World!&lt;br /&gt; &lt;/div&gt; ); &#125;&#125;export default App; 需要引入组件并将其渲染到根元素 App 上，这样才可以在浏览器上看到它。main.js 文件代码:123456import React from 'react';import ReactDOM from 'react-dom';import App from './App.jsx';ReactDOM.render(&lt;App /&gt;, document.getElementById('app')) 第八步、运行服务完成以上配置后，即可运行该服务：1$ npm start]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[2017年的元宵节]]></title>
      <url>%2F2017%2F02%2F11%2F2017%E5%B9%B4%E7%9A%84%E5%85%83%E5%AE%B5%E8%8A%82%2F</url>
      <content type="text"><![CDATA[今天是我拥有博客的第二天，然而我还依然是一个小白。昨天匆匆搭建完博客就草草了事了，然后发现我的博客没有评论和阅读统计，这个怎么可以，所以我就照着NexT的指导用了第三方插件，由于有了昨天的基础，所以今天的人任务十分的顺利，没有丝毫意外的有了在我看起来可以装X的东西（在其他人眼里这就是渣渣一样的）。不管怎么说，自己做的东西总是觉得是好的，即便它是别人没有要的了已经。我做博客其实是想写一些笔记什么的，但是我发现我没有什么可以写的(连Markdown语法还没有学会)，我这个人堪称无聊至极，还是一个什么都不会的笨蛋，并且一无所有。我学习javascript已经很长时间了，可是到现在我都没有学到皮毛，只是懂了一些最基础的知识，可能真的是因为我是一个差等生吧，从小到大一直如此。也是一个彻头彻尾的loser，无论生活与爱情。谨此纪念我二十多年的失败人生，另外今天是元宵节，某人~元宵节快乐！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[我的第一篇文章]]></title>
      <url>%2F2017%2F02%2F10%2F%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%2F</url>
      <content type="text"><![CDATA[不知道怎么突然就想做一个博客，可能是因为我的某种愿望没有达成吧！然后我就突发奇想的用到了傻瓜博客框架hexo，最开始我就想傻瓜式的应该好弄吧，结果我发现我不是傻瓜，我比傻瓜还傻瓜~~ 看了一下午的教程才学会用hexo，不怪某人说我笨死。我看网上都是自己在研究完别人的教程再自己写一个教程，然后我就不写了，自己还没学明白那！不过我要感谢简书的代码咖啡，他的教程写的不错！ 点此跳转]]></content>
    </entry>

    
  
  
</search>
